#include <stdio.h>
#include <stdlib.h>


struct node {
    int data;
    struct node* next;
};


struct node* head = NULL;


void push_stack(int value);
void pop_stack();


void enqueue_queue(int value);
void dequeue_queue();


void display();

int main() {
    int choice, value;

    while (1) {
        printf("\n***** Menu *****\n");
        printf("1. Push (Stack)\n");
        printf("2. Pop (Stack)\n");
        printf("3. Enqueue (Queue)\n");
        printf("4. Dequeue (Queue)\n");
        printf("5. Display List\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to push: ");
                scanf("%d", &value);
                push_stack(value);
                break;
            case 2:
                pop_stack();
                break;
            case 3:
                printf("Enter value to enqueue: ");
                scanf("%d", &value);
                enqueue_queue(value);
                break;
            case 4:
                dequeue_queue();
                break;
            case 5:
                display();
                break;
            case 6:
                printf("Exiting...\n");
                exit(0);
            default:
                printf("Invalid choice! Please try again.\n");
        }
    }

    return 0;
}


void push_stack(int value) {
    struct node* new_node = (struct node*)malloc(sizeof(struct node));
    new_node->data = value;
    new_node->next = head;
    head = new_node;
    printf("Pushed %d onto the stack.\n", value);
}

void pop_stack() {
    if (head == NULL) {
        printf("Stack is empty.\n");
    } else {
        struct node* temp = head;
        head = head->next;
        printf("Popped %d from the stack.\n", temp->data);
        free(temp);
    }
}


void enqueue_queue(int value) {
    struct node* new_node = (struct node*)malloc(sizeof(struct node));
    new_node->data = value;
    new_node->next = NULL;

    if (head == NULL) {
        head = new_node;
    } else {
        struct node* temp = head;
        while (temp->next != NULL) {
            temp = temp->next;
        }
        temp->next = new_node;
    }
    printf("Enqueued %d to the queue.\n", value);
}


void dequeue_queue() {
    if (head == NULL) {
        printf("Queue is empty.\n");
    } else {
        struct node* temp = head;
        head = head->next;
        printf("Dequeued %d from the queue.\n", temp->data);
        free(temp);
    }
}


void display() {
    if (head == NULL) {
        printf("List is empty.\n");
    } else {
        struct node* temp = head;
        printf("List: ");
        while (temp != NULL) {
            printf("%d -> ", temp->data);
            temp = temp->next;
        }
        printf("NULL\n");
    }
}
