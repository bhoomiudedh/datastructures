#include <stdio.h>
#include <stdlib.h>

#define MAX 100

typedef struct {
    int key;
    int isOccupied; 
} HashTable;
void initializeTable(HashTable table[], int m) {
    for (int i = 0; i < m; i++) {
        table[i].key = -1; 
        table[i].isOccupied = 0;
    }
}
int hashFunction(int key, int m) {
    return key % m;
}
void insertKey(HashTable table[], int m, int key) {
    int index = hashFunction(key, m);
    int originalIndex = index;
    while (table[index].isOccupied) {
        index = (index + 1) % m;
        if (index == originalIndex) { 
            printf("Hash table is full. Cannot insert key %d.\n", key);
            return;
        }
    }

    table[index].key = key;
    table[index].isOccupied = 1;
    printf("Key %d inserted at index %d.\n", key, index);
}
int searchKey(HashTable table[], int m, int key) {
    int index = hashFunction(key, m);
    int originalIndex = index;
    while (table[index].isOccupied) {
        if (table[index].key == key) {
            return index; 
        }
        index = (index + 1) % m;
        if (index == originalIndex) { 
            break;
        }
    }

    return -1; 
}

void displayTable(HashTable table[], int m) {
    printf("Hash Table:\n");
    for (int i = 0; i < m; i++) {
        if (table[i].isOccupied) {
            printf("Index %d: Key %d\n", i, table[i].key);
        } else {
            printf("Index %d: Empty\n", i);
        }
    }
}
int main() {
    int m, n;
    printf("Enter the size of the hash table (m): ");
    scanf("%d", &m);

    if (m > MAX) {
        printf("Size exceeds the maximum allowed size of %d.\n", MAX);
        return 1;
    }

    HashTable table[m];
    initializeTable(table, m);

    printf("Enter the number of keys to insert: ");
    scanf("%d", &n);

    printf("Enter the keys:\n");
    for (int i = 0; i < n; i++) {
        int key;
        scanf("%d", &key);
        insertKey(table, m, key);
    }

    displayTable(table, m);

    printf("Enter a key to search: ");
    int searchKeyInput;
    scanf("%d", &searchKeyInput);

    int foundIndex = searchKey(table, m, searchKeyInput);
    if (foundIndex != -1) {
        printf("Key %d found at index %d.\n", searchKeyInput, foundIndex);
    } else {
        printf("Key %d not found in the hash table.\n", searchKeyInput);
    }

    return 0;
}
