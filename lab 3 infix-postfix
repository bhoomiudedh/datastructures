#include <stdio.h>
#include <ctype.h>
#define MAX 100
char stack[MAX];
int top = -1;
void push(char c) {
    stack[++top] = c;
}
char pop() {
    return stack[top--];
}
int precedence(char op) {
    if (op == '+' || op == '-')
        return 1;
    if (op == '*' || op == '/')
        return 2;
    return 0;
}
void infixToPostfix(char* exp) {
    int i = 0, k = 0;
    char postfix[MAX];
    while (exp[i]) {
        if (isalpha(exp[i])) {
            postfix[k++] = exp[i];
        }
        else if (exp[i] == '(') {
            push(exp[i]);
        }
        else if (exp[i] == ')') {
            while (stack[top] != '(') {
                postfix[k++] = pop();
            }
            pop(); 
        }
        else {
            while (top != -1 && precedence(stack[top]) >= precedence(exp[i])) {
                postfix[k++] = pop();
            }
            push(exp[i]);
        }
        i++;
    }
    while (top != -1) {
        postfix[k++] = pop();
    }
    postfix[k] = '\0';
    printf("Postfix Expression: %s\n", postfix);
}
int main() {
    char exp[MAX];
    printf("Enter infix expression: ");
    scanf("%s", exp);
    infixToPostfix(exp);
    return 0;
}
